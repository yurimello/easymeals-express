{
  "_args": [
    [
      {
        "raw": "suggestgrid@git+https://github.com/suggestgrid/suggestgrid-node.git",
        "scope": null,
        "escapedName": "suggestgrid",
        "name": "suggestgrid",
        "rawSpec": "git+https://github.com/suggestgrid/suggestgrid-node.git",
        "spec": "git+https://github.com/suggestgrid/suggestgrid-node.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:suggestgrid/suggestgrid-node.git",
          "sshUrl": "git+ssh://git@github.com/suggestgrid/suggestgrid-node.git",
          "httpsUrl": "git+https://github.com/suggestgrid/suggestgrid-node.git",
          "gitUrl": "git://github.com/suggestgrid/suggestgrid-node.git",
          "shortcut": "github:suggestgrid/suggestgrid-node",
          "directUrl": "https://raw.githubusercontent.com/suggestgrid/suggestgrid-node/master/package.json"
        }
      },
      "/Users/yurimello/Projects/easymeals/easymeals-express"
    ]
  ],
  "_from": "git+https://github.com/suggestgrid/suggestgrid-node.git",
  "_id": "suggestgrid@0.1.28",
  "_inCache": true,
  "_location": "/suggestgrid",
  "_phantomChildren": {},
  "_requested": {
    "raw": "suggestgrid@git+https://github.com/suggestgrid/suggestgrid-node.git",
    "scope": null,
    "escapedName": "suggestgrid",
    "name": "suggestgrid",
    "rawSpec": "git+https://github.com/suggestgrid/suggestgrid-node.git",
    "spec": "git+https://github.com/suggestgrid/suggestgrid-node.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:suggestgrid/suggestgrid-node.git",
      "sshUrl": "git+ssh://git@github.com/suggestgrid/suggestgrid-node.git",
      "httpsUrl": "git+https://github.com/suggestgrid/suggestgrid-node.git",
      "gitUrl": "git://github.com/suggestgrid/suggestgrid-node.git",
      "shortcut": "github:suggestgrid/suggestgrid-node",
      "directUrl": "https://raw.githubusercontent.com/suggestgrid/suggestgrid-node/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/suggestgrid/suggestgrid-node.git#44f0c09e8dffb46a52398ebafa1adf1e3ec447c9",
  "_shasum": "bce71b2bd17bb5229c2b1394ed82530d345fe68b",
  "_shrinkwrap": null,
  "_spec": "suggestgrid@git+https://github.com/suggestgrid/suggestgrid-node.git",
  "_where": "/Users/yurimello/Projects/easymeals/easymeals-express",
  "author": {
    "name": "SuggestGrid"
  },
  "dependencies": {
    "request": "^2.55.0",
    "string": "^3.1.1"
  },
  "description": "SuggestGrid is a recommendation and personalization service.",
  "devDependencies": {},
  "gitHead": "44f0c09e8dffb46a52398ebafa1adf1e3ec447c9",
  "keywords": [],
  "main": "./lib/index.js",
  "name": "suggestgrid",
  "optionalDependencies": {},
  "readme": "# [ SuggestGrid Node.js Client ]( http://www.github.com/suggestgrid/suggestgrid-node )\n\nWe will walk through how to get started with SuggestGrid Node.js Client in three steps:\n    \n1. [Configuration](#1-configuration)\n    \n2. [Post actions](#2-post-actions)\n    \n3. [Get recommendations](#3-get-recommendations)\n\nIf you did not [sign up for SuggestGrid](https://dashboard.suggestgrid.com/users/sign_up), this is the right time.\n\n## Getting Started\n\nIn this guide we will demonstrate how to display personalized recommendations on an existing Node.js project.\n\nWe have a movie catalog Node.js application, SuggestGridMovies, similar to IMDb.\nFor logged in users we want to display movies that *similar people viewed* on movie pages.\nLet's implement this feature in five minutes with SuggestGrid!\n\n### 1. Configuration\n\nWe are beginning the development by adding the client as a dependency.\n\n```\n\"suggestgrid\" : \"https://github.com/suggestgrid/suggestgrid-node.git\"\n```\n\n\n\nApplications make their API requests to their dedicated sub-domain of `suggestgrid.space`.\n\nMost endpoints require a username and password for authentication.\n\nAn initial user name and password is given on sign up.\n\nIt is very convenient to configure SuggestGrid by setting an authenticated `SUGGESTGRID_URL` environment variable in the format below:\n\n`http://{user}:{pass}@{region}.suggestgrid.space/{app-uuid}`\n\nYou can authenticate your application using `SUGGESTGRID_URL` environment variable like the example below:\n\n```js\nvar suggestgrid = require('suggestgrid')\nvar url = require('url')\n\nvar sgUrlString = process.env.SUGGESTGRID_URL\nvar sgUrl = url.parse(sgUrlString)\n\nvar auth = sgUrl.auth.split(':')\nvar user = auth[0]\nvar pass = auth[1]\n\n// Configure the SuggestGrid client.\nvar config = suggestgrid.configuration\nconfig.basicAuthUserName = user\nconfig.basicAuthPassword = pass\nconfig.BASEURI = sgUrlString\n```\n\n\nEvery recommendation logic needs to belong to a *type*.\nFor this demonstration we can create an implicit type named as `views`.\nThis could be done either from the dashboard or with a snippet like this:\n\n```js\nvar suggestgrid = require('suggestgrid')\n\n var typeController = suggestgrid.TypeController;\n typeController.getType('views', function (error, response) {\n    if (error) {\n        typeController.createType('views', {}, function (error, response) {\n            console.info(\"Views type is created\")\n        })\n    }\n})\n```\n\n\n\n### 2. Post actions\n\nOnce the type exists, let's start posting actions.\nWe should invoke SuggestGrid client's ActionController.postAction when an user views an item in our application.\n\nWe can do this by putting the snippet below on the relevant point:\n\n```js\nvar suggestgrid = require('suggestgrid');\n\napp.get('/movie/:id', function (req, res) {\n\n    // create an action when user views a\n    var action = new suggestgrid.Action({type: \"views\", user_id: user.id, item_id:req.params.id});\n    suggestgrid.ActionController.postAction(action, function (error, response) {\n      if (error) {\n        console.error(error);\n      }\n    });\n});\n```\n\n\nThe more actions SuggestGrid gets, more relevant and diverse its responses are.\n\n\n### 3. Get recommendations\n\nFinally, let's show \"movies similar users viewed\" on movie pages.\n\nSuggestGrid needs *recommendation models* for returning recommendations.\nModel generation is scheduled in every 24 hours.\nIn addition, instant model generations can be triggered on the dashboard.\n\nOnce the first model generated for 'views' type, recommendations could be get using a snippet like the following:\n\n```js\nvar suggestgrid = require('suggestgrid')\n\nfunction recommendItems(userId, callback) {\n  var recommendationController = suggestgrid.RecommendationController;\n  recommendationController.recommendItems({type: 'views', user_id: userId, size: 10}, callback);\n}\n```\n",
  "readmeFilename": "README.md",
  "scripts": {},
  "version": "0.1.28"
}
