swagger: '2.0'

info:
  title: SuggestGrid
  version: 0.1.28
  description: SuggestGrid is a recommendation and personalization service.
  x-codegen-settings:
    appendContentHeaders: true
    generateAsyncCode: true
    useMethodPrefix: false
    useModelPostfix: false
    useEnumPostfix: false
    useConstructorsForConfig: false
    iOSUseAppInfoPlist: true
    androidUseAppManifest: true
    collectParameters: false
    csharpDefaultNamespace: SuggestGrid
    javaDefaultPackageName: com.suggestgrid
    brandLabel: SuggestGrid
    userAgent: SUGGESTGRID
    projectName: SuggestGrid
    enableAdditionalModelProperties: false
    preserveParameterOrder: true

schemes:
  - https

securityDefinitions:
  basicAuth:
    type: basic
    description: HTTP Basic Authentication.

security:
  - basicAuth: []

consumes:
  - application/json

produces:
  - application/json

tags:
  - name: type
    description: Type Methods
    x-docs-text: |
      Type methods are used for managing SuggestGrid types.
      For more information on types, refer to [Types concept documentation](http://www.suggestgrid.com/docs/types).
    x-methods:
      - create_type
      - get_type
      - delete_type
      - get_all_types
      - delete_all_types
  - name: action
    description: Action Methods
    x-docs-text: |
      Action methods are for posting and deleting actions.
      For more information on actions, refer to [Actions concept documentation](http://www.suggestgrid.com/docs/actions).
    x-methods:
      - post_action
      - post_bulk_actions
      - get_actions
      - delete_actions
  - name: metadata
    description: Metadata Methods
    x-docs-text: |
      Metadata methods are for posting and deleting metadata.
      For more information on metadata, refer to [Metadata concept documentation ](http://www.suggestgrid.com/docs/metadata).
    x-methods:
      - post_user
      - post_bulk_users
      - get_user
      - get_users
      - delete_user
      - delete_all_users
      - post_item
      - post_bulk_items
      - get_item
      - get_items
      - delete_item
      - delete_all_items
  - name: recommendation
    description: Recommnedation Methods
    x-docs-text: |
      Recommnedation methods are for getting recommended items or users responses from SuggestGrid.
      For more information on recommendations, refer to [Recommendations concept documentation](http://www.suggestgrid.com/docs/recommendations).
    x-methods:
      - get_recommended_users
      - get_recommended_items
  - name: similarity
    description: Similarity Methods
    x-docs-text: |
      Similarity methods are for getting similar items or users responses from SuggestGrid.
      For more information on similars, refer to [Similarities concept documentation](http://www.suggestgrid.com/docs/similarities).
    x-methods:
      - get_similar_users
      - get_similar_items

definitions:
  Action:
    type: object
    description: |
      An action object represents a user's action on an item.
      All actions belong to a type that gives meaning to actions.
    properties:
      type:
        type: string
        description: The type that the action belongs to.
      user_id:
        type: string
        description: The user id of the performer of the action.
      item_id:
        type: string
        description: The item id of the item the action is performed on.
      rating:
        type: number
        description: The optional rating given by the user, if the type is explicit.
      timestamp:
        type: number
        description: The optional UNIX epoch timestamp of the action. Defaults to the current timestamp.
    required:
      - type
      - user_id
      - item_id
  Filter:
    type: object
    description: |
      Contraints on the returned users or items.
      Filter structure is defined in [the filter parameter documentation](http://www.suggestgrid.com/docs/advanced-features#filters-parameter).
    additionalProperties:
      type:
        - string
        - integer
        - number
        - boolean
  Metadata:
    type: object
    description: A metadata for a user or an item.
    properties:
      id:
        type: string
        description: |
          The id of the user or the item that the metadata is associated with.
          Id parameter is necessary for all metadata.
    additionalProperties:
      type:
        - string
        - integer
        - number
        - boolean
    required:
      - id
  # Request Bodies
  TypeRequestBody:
    type: object
    description: Options for creating a type.
    properties:
      rating:
        type: string
        description:  |
          The rating type of the type to be created.
          Could be "explicit" or "implicit"
          The default is "implicit".
  GetRecommendedUsersBody:
    type: object
    description: Query for recommended users.
    properties:
      type:
        type: string
        description: The type of the query.
      types:
        type: string
        description: The types of the query. Exactly one of type or types parameters must be provided.
      item_id:
        type: string
        description: The item id of the query.
      item_ids:
        type: array
        description: The item ids of the query. Exactly one of item id or item ids parameters must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most recommended items to be skipped.
      size:
        type: integer
        description: The number of users asked to return in the response.
      similar_user_id:
        type: string
        description: Similar user that the response should be similar to.
      similar_user_ids:
        type: string
        description: |
          Similar users that the response should be similar to.
          At most one of similar user and similar users parameters can be provided.
      fields:
        type: array
        items:
          type: string
        description: The metadata fields that are to be included in returned users.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These user ids that will not be included in the response.
  GetRecommendedItemsBody:
    type: object
    description: Query for recommended items.
    properties:
      type:
        type: string
        description: The type of the query.
      types:
        type: string
        description: The types of the query. Exactly one of type or types parameters must be provided.
      user_id:
        type: string
        description: The user id of the query.
      user_ids:
        type: array
        description: The user ids of the query. Exactly one of user id or user ids parameters must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most recommended items to be skipped.
      size:
        type: integer
        description: The number of items asked to return in the response.
      similar_item_id:
        type: string
        description: Similar item that the response should be similar to.
      similar_item_ids:
        type: string
        description: |
          Similar items that the response should be similar to.
          At most one of similar item and similar items parameters can be provided.
      fields:
        type: array
        items:
          type: string
        description: The metadata fields that are to be included in returned items.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These item ids that will not be included in the response.
  GetSimilarUsersBody:
    type: object
    description: The query for similar users.
    properties:
      type:
        type: string
        description: The type of the query.
      types:
        type: string
        description: The types of the query. Exactly one of type or types parameters must be provided.
      user_id:
        type: string
        description: The user id of the query.
      user_ids:
        type: array
        description: The user ids of the query. Exactly one of user id or user ids parameters must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most similar users to be skipped.
      size:
        type: integer
        description: The number of users asked to return in the response.
      fields:
        type: array
        items:
          type: string
        description: The metadata fields that are to be included in returned users.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These user ids that will not be included in the response.
  GetSimilarItemsBody:
    type: object
    description: The query for similar items.
    properties:
      type:
        type: string
        description: The type of the query.
      types:
        type: string
        description: The types of the query. Exactly one of type or types parameters must be provided.
      item_id:
        type: string
        description: The item id of the query.
          Get similar items to given item id. Either item id or item ids must be provided.
      item_ids:
        type: array
        description: The item ids of the query. Exactly one of item id or item ids parameters must be provided.
          Get similar items to given item ids. Either item id or item ids must be provided.
        items:
          type: string
      from:
        type: integer
        description: The number of most similar items to be skipped.
      size:
        type: integer
        description: The number of items asked to return in the response.
      fields:
        type: array
        items:
          type: string
        description: The metadata fields that are to be included in returned items.
      filter:
        $ref: '#/definitions/Filter'
      except:
        type: array
        items:
          type: string
        description: These item ids that will not be included in the response.
  # Responses
  MessageResponse:
    type: object
    description: A basic response.
    properties:
      message:
        type: string
        description: Message of the response.
  ActionsResponse:
    type: object
    description: Paged actions response.
    properties:
      count:
        type: integer
        format: int64
        description: The number of actions in the response.
      total_count:
        type: integer
        format: int64
        description: The total number of actions.
      actions:
        type: array
        items:
          $ref: '#/definitions/Action'
  ErrorResponse:
    type: object
    description: Error response.
    properties:
      error_text:
        type: string
        description: Message of the response.
      error_description:
        type: string
        description: Description of the response.
      error_uri:
        type: string
        description: URI of the response for more details.
  DetailedErrorResponse:
    type: object
    description: Error response.
    properties:
      error_text:
        type: string
        description: Message of the response.
      error_description:
        type: string
        description: Description of the response.
      error_uri:
        type: string
        description: URI of the response for more details.
      error_details:
        type: string
        description: Specific details of the response.
  LimitExceededErrorResponse:
    type: object
    description: Error response.
    properties:
      error_text:
        type: string
        description: Message of the response.
      error_description:
        type: string
        description: Description of the response.
      error_uri:
        type: string
        description: URI of the response for more details.
      used:
        type: integer
        format: int32
        description: The quantity used by the account.
      limit:
        type: integer
        format: int32
        description: The limit quantity of the account.
  DeleteErrorResponse:
    type: object
    description: Error response with found, deleted, and failed parameters.
    properties:
      error_text:
        type: string
        description: Message of the response.
      error_description:
        type: string
        description: Description of the response.
      error_uri:
        type: string
        description: URI of the response for more details.
      found:
        type: integer
        format: int32
        description: The number of records found for the delete query.
      deleted:
        type: integer
        format: int32
        description: The number of records deleted for the delete query.
      failed:
        type: integer
        format: int32
        description: The number of records found but not deleted for the delete query.
  DeleteSuccessResponse:
    type: object
    description: Successful delete response with found, deleted, and failed parameters.
    properties:
      message:
        type: string
        description: Message of the response.
      found:
        type: integer
        format: int32
        description: The number of records found for the delete query.
      deleted:
        type: integer
        format: int32
        description: The number of records deleted for the delete query.
      failed:
        type: integer
        format: int32
        description: The number of records found but not deleted for the delete query.
  GetTypesResponse:
    type: object
    description: Type names response.
    properties:
      types:
        type: array
        description: The list of type names
        items:
          type: string
  GetTypeResponse:
    type: object
    description: Get type details response.
    properties:
      rating:
        type: string
        description: Rating type of the type that is either implicit or explicit.
  BulkPostResponse:
    type: object
    description: |
      Bulk error response.
      Returned on all bulk post requests regardless of the number of erroneous or successful posts.
    properties:
      message:
        type: string
        description: Message of the response.
      errors:
        type: array
        items:
          $ref: '#/definitions/BulkPostError'
  BulkPostError:
    type: object
    description: Error response returned due to bulk post schema validations.
    properties:
      message:
        type: string
        description: Message of the response.
      value:
        type: object
        description: The cause of the error.
      error:
        type: object
        description: Programatic description of the error.
  UsersResponse:
    type: object
    description: Get users response.
    properties:
      count:
        type: integer
        format: int64
        description: The number of users in the response.
      total_count:
        type: integer
        format: int64
        description: The total number of users available.
      users:
        type: array
        items:
          $ref: '#/definitions/Metadata'
  ItemsResponse:
    type: object
    description: Get items response.
    properties:
      count:
        type: integer
        format: int64
        description: The number of items in the response.
      total_count:
        type: integer
        format: int64
        description: The total number of items available.
      items:
        type: array
        items:
          $ref: '#/definitions/Metadata'

paths:
  # Type Paths
  /v1/types:
    get:
      tags:
        - type
      operationId: get_all_types
      summary: Get All Types
      description: Returns all type names in an array named types.
      responses:
        200:
          description: Get types response.
          schema:
            $ref: '#/definitions/GetTypesResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - type
      operationId: delete_all_types
      summary: Delete All Types
      description: Deletes ALL the types and ALL the actions.
      responses:
        200:
          description: Get types response.
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/types/{type}:
    get:
      tags:
        - type
      operationId: get_type
      summary: Get Properties of a Type
      description: Returns the options of a type. The response rating parameter.
      parameters:
        - name: type
          in: path
          description: The name of the type to get properties.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Get type response.
          schema:
            $ref: '#/definitions/GetTypeResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - type
      operationId: create_type
      summary: Create a New Type
      description: Creates a new type.
      parameters:
        - name: type
          in: path
          description: The name of the type to be created.
          required: true
          type: string
          format: id
        - name: settings
          in: body
          description: Optional settings for the rating parameter.
          required: false
          schema:
            $ref: '#/definitions/TypeRequestBody'
      responses:
        201:
          description: Type is created.
          schema:
            $ref: '#/definitions/MessageResponse'
        402:
          description: Type limit reached.
          schema:
            $ref: '#/definitions/LimitExceededErrorResponse'
        409:
          description: Type already exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Rating type is not `implicit` or `explicit`.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - type
      operationId: delete_type
      summary: Delete a Type
      description: |
        Deletes a type with ALL of its actions and recommendation model.
        Do not use this if you will need the type.
      parameters:
        - name: type
          in: path
          description: The name of the type to be deleted.
          required: true
          type: string
          format: id
      responses:
        200:
          description: Type is deleted
          schema:
            $ref: '#/definitions/MessageResponse'
        404:
          description: Type does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Action Paths
  /v1/actions:
    post:
      tags:
        - action
      operationId: post_action
      summary: Post an Action
      description: |
        Posts an action to the given type in the body.
        The body must have user id, item id and type.
        Rating is required for actions sent to an explicit type.
      parameters:
        - name: action
          in: body
          description: The action to be posted.
          required: true
          schema:
            $ref: '#/definitions/Action'
      responses:
        201:
          description: An action is created.
          schema:
            $ref: '#/definitions/MessageResponse'
        400:
          description: Required `user_id` or `item_id` parameters are missing from the request body.
          schema:
            $ref: '#/definitions/ErrorResponse'
        402:
          description: Action limit exceeded.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Type does not exists.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - action
      operationId: get_actions
      summary: Get Actions
      description: |
        Get actions. Defaut responses will be paged by 10 actios each.
        Type, user id, item id, or older than parameters could be provided.
      parameters:
        - name: type
          in: query
          description: The type of the actions.
          required: false
          type: string
          format: id
        - name: user_id
          in: query
          description: The user id of the actions.
          required: false
          type: string
          format: id
        - name: item_id
          in: query
          description: The item id of the actions.
          required: false
          type: string
          format: id
        - name: older_than
          in: query
          description: |
            Maxium timestamp of the actions.
            Valid times are 1s, 1m, 1h, 1d, 1M, 1y, or unix timestamp (like 1443798195).
          required: false
          type: string
          format: id
        - name: size
          in: query
          description: |
            The number of the users response.
            Defaults to 10. Must be between 1 and 10.000 inclusive.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int32
        - name: from
          in: query
          description: |
            The number of users to be skipped for response.
            Defaults to 0. Must be bigger than or equal to 0.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: Paged actions response.
          schema:
            $ref: '#/definitions/ActionsResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - action
      operationId: delete_actions
      summary: Delete Actions
      description: |
        Type must be provided. Additionally,

        * If both user id and item id are supplied the user's actions on the item will be deleted.
        * If only user id is provided, all actions of the user will be deleted.
        * If only item id is provided, all actions on the item will be deleted.
        * If only older than is provided, all actions older than the timestamp or the duration will be deleted.
        * If a few of these parameters are provided, delete action will be executed within intersection of these parameters.
        * One of these parameters must be provided. In order to delete all actions, delete the type.
      parameters:
        - name: type
          in: query
          description: The type of the actions.
          required: false
          type: string
          format: id
        - name: user_id
          in: query
          description: The user id of the actions.
          required: false
          type: string
          format: id
        - name: item_id
          in: query
          description: The item id of the actions.
          required: false
          type: string
          format: id
        - name: older_than
          in: query
          description: |
            Delete all actions of a type older than the given timestamp or time.
            Valid times are 1s, 1m, 1h, 1d, 1M, 1y, or unix timestamp (like 1443798195).
          required: false
          type: string
          format: id
      responses:
        200:
          description: Successfully deleted actions.
          schema:
            $ref: '#/definitions/DeleteSuccessResponse'
        400:
          description: Required `user_id` or `item_id` parameters are missing from the request body.
          schema:
            $ref: '#/definitions/ErrorResponse'
        404:
          description: Delete actions not found.
          schema:
            $ref: '#/definitions/DeleteErrorResponse'
        422:
          description: No query parameter (`user_id`, `item_id`, or `older_than`) is given.  In order to delete all actionsdelete the type.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        505:
          description: Request timed out.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/actions/_bulk:
    post:
      tags:
        - action
      operationId: post_bulk_actions
      summary: Post Bulk Actions
      description: |
        Posts bulk actions to SuggestGrid.
        The recommended method for posting multiple actions at once.
      consumes:
       - text/plain; charset=utf-8
      parameters:
        - name: actions
          in: body
          description: |
            A number of action objects separated with newlines.
            Note that this is not a valid JSON data structure.
            The body size is limited to 10 thousand lines.
          required: true
          schema:
            type: string
      responses:
        201:
          description: Bulk action request executed.
          schema:
            $ref: '#/definitions/BulkPostResponse'
        400:
          description: Body is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        402:
          description: Action limit exceeded.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Metadata Paths
  /v1/users/{user_id}:
    parameters:
      - name: user_id
        in: path
        description: The user id to delete its metadata.
        required: true
        type: string
        format: id
    get:
      tags:
        - metadata
      operationId: get_user
      summary: Get A User
      description: Returns a user metadata if it exists.
      responses:
        200:
          description: Returns a user metadata.
          schema:
            $ref: '#/definitions/Metadata'
        404:
          description: User not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_user
      summary: Delete a User
      description: Deletes a user metadata with the given user id.
      responses:
        200:
          description: Deleted a user metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/users:
    post:
        tags:
          - metadata
        operationId: post_user
        summary: Post a User
        description: Posts a user metadata.
        parameters:
          - name: user
            in: body
            description: The metadata to be saved. Metadata format has its restrictions.
            required: true
            schema:
              $ref: '#/definitions/Metadata'
        responses:
          201:
            description: Posted a user metadata.
            schema:
              $ref: '#/definitions/MessageResponse'
          400:
            description: Metadata is invalid.
            schema:
              $ref: '#/definitions/DetailedErrorResponse'
          429:
            description: Too many requests.
            schema:
              $ref: '#/definitions/ErrorResponse'
          default:
            description: Unexpected internal error.
            schema:
              $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - metadata
      operationId: get_users
      summary: Get Users
      description: |
        Get items and total count of items.
        Page and per-page parameters could be set.
      parameters:
        - name: size
          in: query
          description: |
            The number of the users response.
            Defaults to 10. Must be between 1 and 10.000 inclusive.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int32
        - name: from
          in: query
          description: |
            The number of users to be skipped for response.
            Defaults to 0. Must be bigger than or equal to 0.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: Get users response.
          schema:
            $ref: '#/definitions/UsersResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_all_users
      summary: Delete All Users
      description: Deletes all user metadata from SuggestGrid.
      responses:
        200:
          description: Deleted all user metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/items/{item_id}:
    parameters:
      - name: item_id
        in: path
        description: The item id to delete its metadata.
        required: true
        type: string
        format: id
    get:
      tags:
        - metadata
      operationId: get_item
      summary: Get An Item
      description: Returns an item metadata if it exists.
      responses:
        200:
          description: Returns an item metadata.
          schema:
            $ref: '#/definitions/Metadata'
        404:
          description: Item not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_item
      summary: Delete An Item
      description: Deletes an item metadata with the given item id.
      responses:
        200:
          description: Deleted an item metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/items:
    post:
      tags:
        - metadata
      operationId: post_item
      summary: Post an Item
      description: |
        Posts an item metadata.
        This metadata can be used to filter or to be included in recommendations and similars methods.
      parameters:
        - name: item
          in: body
          description: The metadata to be saved. Metadata format has its restrictions.
          required: true
          schema:
            $ref: '#/definitions/Metadata'
      responses:
        201:
          description: Posted an item metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        400:
          description: Metadata is invalid.
          schema:
            $ref: '#/definitions/DetailedErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - metadata
      operationId: get_items
      summary: Get Items
      description: |
        Get items and total count of items.
        Page and per-page parameters could be set.
      parameters:
        - name: size
          in: query
          description: |
            The number of the users response.
            Defaults to 10. Must be between 1 and 10.000 inclusive.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int32
        - name: from
          in: query
          description: |
            The number of users to be skipped for response.
            Defaults to 0. Must be bigger than or equal to 0.
            This parameter must be string represetation of an integer like "1".
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: Get items response.
          schema:
            $ref: '#/definitions/ItemsResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - metadata
      operationId: delete_all_items
      summary: Delete All Items
      description: |
        Delete all items metadata.
        This method would flush all items metadata on SuggestGrid.
      responses:
        200:
          description: Deleted all item metadata.
          schema:
            $ref: '#/definitions/MessageResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/users/_bulk:
    post:
      tags:
        - metadata
      operationId: post_bulk_users
      summary: Post Bulk Users
      description: |
        Post user metadata in bulk.
        This metadata can be used to filter or to be included in recommendations and similars methods.
      consumes:
       - text/plain; charset=utf-8
      parameters:
        - name: users
          in: body
          description:  |
            A number of user metadata objects separated with newlines.
            Each user metadata object must have its id field.
            Note that this is not a valid JSON data structure.
            The body size is limited to 10 thousand lines.
          required: true
          schema:
            type: string
      responses:
        201:
          description: Bulk user metadata request executed.
          schema:
            $ref: '#/definitions/BulkPostResponse'
        400:
          description: Body is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/items/_bulk:
    post:
      tags:
        - metadata
      operationId: post_bulk_items
      summary: Post Bulk Items
      description: |
        Post item metadata in bulk.
        This method is recommended for sharing stored data with SuggestGrid.
      consumes:
       - text/plain; charset=utf-8
      parameters:
        - name: items
          in: body
          description:   |
            A number of item metadata objects separated with newlines.
            Each item metadata object must have its id field.
            Note that this is not a valid JSON data structure.
            The body size is limited to 10 thousand lines.
          required: true
          schema:
            type: string
      responses:
        201:
          description: Bulk item metadata request executed.
          schema:
            $ref: '#/definitions/BulkPostResponse'
        400:
          description: Body is missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Recommendation Paths
  /v1/recommend/users:
    post:
      tags:
        - recommendation
      operationId: get_recommended_users
      summary: Get Recommended Users
      description: Returns recommended users for the given query.
      parameters:
        - name: query
          in: body
          description: The query for recommended users.
          required: true
          schema:
            $ref: '#/definitions/GetRecommendedUsersBody'
      responses:
        200:
          description: Recommended users response.
          schema:
            $ref: '#/definitions/UsersResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/recommend/items:
    post:
      tags:
        - recommendation
      operationId: get_recommended_items
      summary: Get Recommended Items
      description: Returns recommended items for the given query.
      parameters:
        - name: query
          in: body
          description: The query for recommended items.
          required: true
          schema:
            $ref: '#/definitions/GetRecommendedItemsBody'
      responses:
        200:
          description: Recommended items response.
          schema:
            $ref: '#/definitions/ItemsResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  # Similarity Paths
  /v1/similar/users:
    post:
      tags:
        - similarity
      operationId: get_similar_users
      summary: Get Similar Users
      description: Returns similar users for the query.
      parameters:
        - name: query
          in: body
          description: The query for similar users.
          required: true
          schema:
            $ref: '#/definitions/GetSimilarUsersBody'
      responses:
        200:
          description: Similar users response.
          schema:
            $ref: '#/definitions/UsersResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /v1/similar/items:
    post:
      tags:
        - similarity
      operationId: get_similar_items
      summary: Get Similar Items
      description: Returns similar items for the query.
      parameters:
        - name: query
          in: body
          description: The query for similar items.
          required: true
          schema:
            $ref: '#/definitions/GetSimilarItemsBody'
      responses:
        200:
          description: Similar items response.
          schema:
            $ref: '#/definitions/ItemsResponse'
        400:
          description: Request body is invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        422:
          description: Required parameters are missing.
          schema:
            $ref: '#/definitions/ErrorResponse'
        429:
          description: Too many requests.
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: Unexpected internal error.
          schema:
            $ref: '#/definitions/ErrorResponse'
